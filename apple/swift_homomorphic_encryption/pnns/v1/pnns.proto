// Copyright 2024 Apple Inc. and the Swift Homomorphic Encryption project authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package apple.swift_homomorphic_encryption.pnns.v1;

import "apple/swift_homomorphic_encryption/pnns/v1/pnns_matrix_packing.proto";
import "apple/swift_homomorphic_encryption/v1/he.proto";

// Stores a matrix of encrypted values in a serialized ciphertext for use in linear algebra
// operations
message SerializedCiphertextMatrix {
  // Number of data rows stored in the ciphertext.
  uint32 num_rows = 1;
  // Number of data columns stored in the ciphertext.
  uint32 num_columns = 2;
  // Stores the encrypted data.
  repeated apple.swift_homomorphic_encryption.v1.SerializedCiphertext ciphertexts = 3;
  // Packing algorithm for the plaintext data.
  MatrixPacking packing = 4;
}

// Serialized plaintext matrix
message SerializedPlaintextMatrix {
  // Number of rows in the data encoded in the plaintext matrix.
  uint32 num_rows = 1;
  // Number of columns in the data encoded in the plaintext matrix.
  uint32 num_columns = 2;
  // Encoded values.
  repeated apple.swift_homomorphic_encryption.v1.SerializedPlaintext plaintexts = 3;
  // Plaintext packing.
  MatrixPacking packing = 4;
}
